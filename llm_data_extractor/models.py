"""Data Models"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/API/models.ipynb.

# %% auto 0
__all__ = ['AnswerType', 'Question', 'ExtractionResult', 'LLMConfig', 'DBConfig']

# %% ../nbs/API/models.ipynb 3
from dataclasses import dataclass, field
from typing import Any, Dict, List, Optional, Union
from enum import Enum
from datetime import datetime
import os

# %% ../nbs/API/models.ipynb 4
if not hasattr(os.environ,'PRODUCTION_SOURCE') or os.environ['PRODUCTION_SOURCE'] == 'local':
    from dotenv import load_dotenv
    load_dotenv() 

# %% ../nbs/API/models.ipynb 5
class AnswerType(Enum):
    BOOLEAN = "boolean"
    ENUM = "enum" 
    INTEGER = "integer"
    FLOAT = "float"
    STRING = "string"
    DATE = "date"
    LIST = "list"


# %% ../nbs/API/models.ipynb 6
@dataclass
class Question:
    id: str
    text: str
    answer_type: AnswerType
    answer_config: Dict[str, Any] = field(default_factory=dict)
    
    def __post_init__(self):
        if isinstance(self.answer_type, str):
            self.answer_type = AnswerType(self.answer_type)

# %% ../nbs/API/models.ipynb 7
@dataclass
class ExtractionResult:
    question_id: str
    raw_answer: str
    parsed_answer: Any
    confidence: Optional[float]
    is_valid: bool
    input_row_id: Union[str,None] = None
    table_name: str = 'PROCESSED_FORMSTACK_DATA'
    field_name: str = 'MESSAGE'
    validation_error: Optional[str] = None
    timestamp: datetime = field(default_factory=datetime.now)

# %% ../nbs/API/models.ipynb 8
@dataclass
class LLMConfig:
    model_name: str = "gpt-3.5-turbo"
    temperature: float = 0.0
    max_tokens: Optional[int] = None
    api_key: Optional[str] = None
    base_url: Optional[str] = None
    timeout: int = 60
    max_retries: int = 3

# %% ../nbs/API/models.ipynb 9
@dataclass
class DBConfig:
    schema_: str
    account: str = os.environ['SNOWFLAKE_ACCOUNT']
    user: str = os.environ['SNOWFLAKE_USER']
    password: str = os.environ['SNOWFLAKE_PASSWORD']
    warehouse: str = os.environ['SNOWFLAKE_WAREHOUSE']
    database: str = os.environ['SNOWFLAKE_DATABASE']
    role: Optional[str] = None
